--Used for equipping selected items, arranging menu tiles, and updating information on this screen

------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Script-wide used variables
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local PlayerUserId = Player.UserId
local DataMenu = script.Parent.DataMenu
local PlayerMenu = DataMenu:FindFirstChild("PlayerMenu")
local UpdatePlayerMenu = game.ReplicatedStorage.Events.GUI:WaitForChild("UpdatePlayerMenu")
local UpdateEquippedItem = game.ReplicatedStorage.Events.GUI:WaitForChild("UpdateEquippedItem")

-----------------<|Default Screen|>----------------------------------------------------------------------------------------------

local PlayerInfo = PlayerMenu.PlayerInfo
local thumbType = Enum.ThumbnailType.HeadShot
local thumbSize = Enum.ThumbnailSize.Size420x420
local PlayerProfilePicture = Players:GetUserThumbnailAsync(PlayerUserId, thumbType, thumbSize)
PlayerInfo.PlayerThumbnail.Image = PlayerProfilePicture

PlayerInfo.PlayerName.Text = tostring(Player)

local function PrepPlayerMenu()
	for i,menu in pairs (PlayerMenu.BagInfo:GetChildren()) do
		if menu:IsA("Frame") then
			menu.Visible = false
		end
	end
end

script.Parent.OpenDataMenuButton.Activated:Connect(function()
	PlayerMenu.Visible = true
	PrepPlayerMenu()
end)

DataMenu.PlayerMenuButton.Activated:Connect(function()
	PrepPlayerMenu()
end)


------------------<|PlayerItemMenus|>-----------------------------------------------------------------------------------------------

local RealBags = game.ReplicatedStorage.Equippable.Bags
local BagInfo = PlayerMenu.BagInfo

--local function FindStatPage(Item, Menu, MaxAmount)
	--local Pages = Menu:GetChildren()
	
	--local Page
	--local Over
	--local SlotCount = 0
	--local found = false
	--for i,page in pairs (Pages) do
		
	--end
--end
local FindStatPage = game.ReplicatedStorage.Events.GUI.FindStatPage

local function ManageTiles(Item, Menu, ItemType, Type)
	print("ITEMS: ",Type, ItemType, Item)
	local ItemInfo = game.ReplicatedStorage.Equippable:FindFirstChild(Type):FindFirstChild(ItemType):FindFirstChild(Item)
	
	local Rarity
	local Page
	local SlotCount
	local OriginalItemTile
	
	if Type == "Bags" then
		OriginalItemTile = game.ReplicatedStorage.GuiElements:FindFirstChild("InventoryMaterialSlot")
		Rarity,Page,SlotCount = FindStatPage:Invoke(Item, Menu, 15, false) 
	else
		--OriginalItemTile = game.ReplicatedStorage.GuiElements:FindFirstChild()
		--lareger boxes for more info (bag only needs max capacity value, tools and pets will need more)
	end
	
	--(Will there ever be a time when an existing tile in PlayerMenu updates?)
	--Possibly, don't have to check if there is already a tile to update, and the new tile's info will only have to be inserted
	--when it's first created (not updated like with inventory tiles)
end

local function InsertTileInfo()
	
end



UpdatePlayerMenu.OnClientEvent:Connect(function(EquipType, ItemType, Item)
	if EquipType == "Bags" then
		local BagMenu = BagInfo:FindFirstChild(ItemType .. "Menu")
		ManageTiles(Item, BagMenu, ItemType, EquipType)
	else
		--local ItemMenu
		--ManageTiles()
	end
	
	
	
end)

--BagMenu Buttons
for i,button in pairs (BagInfo.OverallBag:GetChildren()) do
	if button:IsA("ImageButton") then
		button.Activated:Connect(function()
			local AssociatedMenu = BagInfo:FindFirstChild(tostring(button) .. "Menu")
			AssociatedMenu.Visible = true
		end)
	end
end


	

	
	



local function SetUpBagMenu(BagType)
	
end

local function UpdateMenuForBag()
	
end


--Each bag icon has a small progress bar with bright blue coloring (to see easily) that displays how full the bag is

--Item Selection Manager (possibly item tile selection manager too like InventoryHandler)

--Equip event to change used item

--Information updater functions

